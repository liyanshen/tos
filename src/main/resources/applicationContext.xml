<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd">

        <context:component-scan base-package="com.leu.service,com.leu.dao"/>

        <context:property-placeholder location="classpath*:jdbc.properties"/>

        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
                <property name="driverClassName" value="${jdbc.driver}" />
                <property name="url" value="${jdbc.url}" />
                <property name="username" value="${jdbc.user}" />
                <property name="password" value="${jdbc.password}" />

                <property name="filters" value="stat" />

                <property name="maxActive" value="20" />
                <property name="initialSize" value="1" />
                <property name="maxWait" value="60000" />
                <property name="minIdle" value="1" />
                <property name="timeBetweenEvictionRunsMillis" value="60000" />
                <property name="minEvictableIdleTimeMillis" value="300000" />
                <property name="validationQuery" value="SELECT 'x'" />
                <property name="testWhileIdle" value="true" />
                <property name="testOnBorrow" value="false" />
                <property name="testOnReturn" value="false" />
                <property name="poolPreparedStatements" value="true" />
                <property name="maxPoolPreparedStatementPerConnectionSize" value="50" />
        </bean>
        <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
                <property name="dataSource" ref="dataSource"></property>
        </bean>

        <tx:advice id="interceptor" transaction-manager="transactionManager">
                <tx:attributes>
                        <tx:method name="delete*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" no-rollback-for="java.lang.RuntimeException"/>
                        <tx:method name="insert*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.RuntimeException" />
                        <tx:method name="update*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />
                        <tx:method name="find*" propagation="SUPPORTS"/>
                        <tx:method name="get*" propagation="SUPPORTS"/>
                        <tx:method name="select*" propagation="SUPPORTS"/>
                </tx:attributes>
        </tx:advice>

        <aop:config>
                <aop:pointcut id="pc" expression="execution(public * com.leu.service.*.*(..))"/>
                <aop:advisor advice-ref="interceptor" pointcut-ref="pc"></aop:advisor>
        </aop:config>

        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
                <!-- 数据源 -->
                <property name="dataSource" ref="dataSource"></property>
                <property name="mapperLocations" value="classpath*:mapper/*.xml"></property>
        </bean>
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
                <!--指定会话工厂，如果当前上下文中只定义了一个则该属性可省去 -->
                <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
                <!-- 指定要自动扫描接口的基础包，实现接口 -->
                <property name="basePackage" value="com.leu.dao"></property>
        </bean>
</beans>